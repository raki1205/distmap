#summary How to use DistMap is explained here


<wiki:toc max_depth="3" />


=1. Introduction=
`DistMap` provides a scalable and portable framework to map short reads on a hadoop cluster. It is a complete pipeline especially designed for non-expers. Currently  `DistMap ` supports 8 mappers:

*BWA* (http://soap.genomics.org.cn/soapaligner.html)<br>
*GSNAP* (http://soap.genomics.org.cn/soapaligner.html)<br>
*`TopHat`* (http://tophat.cbcb.umd.edu/)<br>
*Bowtie* (http://bowtie-bio.sourceforge.net/index.shtml)<br>
*SOAP* (http://soap.genomics.org.cn/soapaligner.html)<br>
*STAR* (http://gingeraslab.cshl.edu/STAR/)<br>
*Bismask* (http://www.bioinformatics.babraham.ac.uk/projects/bismark/)<br>
*BSMAP* (http://code.google.com/p/bsmap/)<br>

 `DistMap' support paire-end and single-end read mapping in FASTQ file format. It returns the final output as a SAM or BAM file.


=2. System Requirements=
`DistMap` is implemented in Perl and runs on all Unix operating systems. It requires Perl 5.8 or higher, `MergeSamFiles.jar` and `SortSam.jar` from PICARD (http://picard.sourceforge.net).

=3. How to run `DistMap`?=

Download source code of  `DistMap ` from http://distmap.googlecode.com/files/DistMap_v1.0.tar.gz and run following command on terminal to uncompressed the source code.

{{{
tar -xzvf DistMap_v1.0.tar.gz

}}}

Run following command to get `DistMap` command line parameters.
{{{
perl DistMap_v1.0/distmap --help
}}}


===`DistMap` command line parameters===


{{{
Usage: perl DistMap_v1.0/distmap

--reference-fasta      		Reference fasta file full path. MANDATORY parameter.
  
--input                		provide input fasta files. Either as a pair or single Fastq file.
				For Paired-end data --input 'read1.fastq,read2.fastq'
				For Single-end data --input 'read.fastq'
				Multiple inputs are possible to repeat --input parameter
					
				--input 'sample1_1.fastq,sample1_2.fastq' --input 'sample2_1.fastq,sample2_2.fastq'
				This is important to give single or a pair input file within
				single or double quote and if paired file, it must be comma
				seperated. MANDATORY parameter.
					
--output              		Full path of output folder where final output will be kept. MANDATORY parameter.

--only-process    		Step1: This option will 1) convert FASTQ files into 1 line format, 2) create genome index
			        and 3) create archieve to send for job and exit. OPTIONAL parameter
				
--only-hdfs-upload          	Step2: This option assume that data processing is done and only upload reads and archieve created in
				data process step will be loaded into HDFS file system and exit. OPTIONAL parameter

--only-map            		Step3: This option will assume that data is already loaded into HDFS and will only
				run map on cluster

--only-hdfs-download          	Step4: This option assume that mapping already done on cluster and files will be downloaded
				from cluster to local output directory. OPTIONAL parameter
				
--only-merge          		Step5: This option assume that data already in local directory from HDFS
				and now will be merged and create a single SAM or BAM output file. OPTIONAL parameter

--only-delete-temp          	Step6: This is the last step of piepline. This option will delete the
				mapping data from HDFS file system as well as from local temp directory.
				OPTIONAL parameter
				
--hadoop-home         		Give the full path of hadoop folder. MANDATORY parameter.
				hadoop home path should be identical in master, secondary namenode and
				all slaves.
				Example: --hadoop-home /usr/local/hadoop
					
--mapper              		Mapper name [bwa,tophat,gsnap,bowtie,soap]. MANDATORY parameter.
				Example: --mapper bwa
					
--mapper-path         		Mapper executable full path. Mapper executables should be in
				same loaction on all nodes (slaves). MANDATORY parameter.
				Example: --mapper-path /usr/local/hadoop/bwa
--gsnap-output-split		GSNAP has a feature to split different type of maaping output in different
                                SAM files.
				
				For detail do gsnap --help and you can see --split--output.
				  --split-output=STRING   Basename for multiple-file output, separately for nomapping,
                                   halfmapping_uniq, halfmapping_mult, unpaired_uniq, unpaired_mult,
                                   paired_uniq, paired_mult, concordant_uniq, and concordant_mult results (up to 9 files,
                                   or 10 if --fails-as-input is selected, or 3 for single-end reads)
				   					
--picard-mergesamfiles-jar     PICARD MergeSamFiles.jar full path. It will be used to merge all
				SAM or BAM files. MANDATORY parameter.
				Example: --picard-mergesamfiles-jar /usr/local/hadoop/picard-tools-1.56/MergeSamFiles.jar
				
--picard-sortsam-jar     	PICARD SortSam.jar full path. It will be used to for SAM BAM conversion. MANDATORY parameter.
				Example: --picard-sortsam-jar /usr/local/hadoop/picard-tools-1.56/SortSam.jar
				
--mapper-args        		Arguments for mapping:
				BWA mapping for aln command:
					Example --mapper-args "-o 1 -n 0.01 -l 200 -e 12 -d 12"
					Note: Define BWA parameters correctly accoring to the version is used here.
				TopHat:
					Example: --mapper-args "--mate-inner-dist 200 --max-multihits 40 --phred64-quals"
					Note: Define TopHat parameters correctly accoring to the version is used here.
				GSNAP mapping:
					Example: --mapper-args "--pairexpect 200 --quality-protocol illumina"
					Note: Define gsnap parameters correctly accoring to the version is used here.
					For detail about parameters visit [http://research-pub.gene.com/gmap/]
				bowtie mapping:
					Example: --mapper-args "--sam"
					Note: Define gsnap parameters correctly accoring to the version is used here.
					For detail about parameters visit [http://bowtie-bio.sourceforge.net/index.shtml]
				SOAPAlinger:
					Example: --mapper-args "-m 400 -x 600"
					Note: Define SOAPaligner parameters correctly accoring to the version is used here.
					For detail about parameters visit [http://soap.genomics.org.cn/soapaligner.html]
Please note that processor parameters not required in arguments. Example in case of BWA mapping dont give -t parameter.
This parameter is given by DistMap internally.

--bwa-sampe-args      	Arguments for BWA sampe or samse module.
			bwa sampe for paired-end reads
			bwa samse for single-end reads
			Example --bwa-sampe-args "-a 500 -s"
					
--output-format    		Output file format either SAM or BAM.
				Default: BAM
					
--job-desc    		Give a job description which will be dispalyed in JobTracker webpage.
				Default: <mapper name> mapping.
Hadoop streaming Parameters:

--hadoop-scheduler    	Give the scheduler name:
				1) Fair Scheduler (need to configure. http://hadoop.apache.org/docs/stable/fair_scheduler.html)
				2) FIFO (it is default comes with Hadoop)
				3) Capacity Scheduler (need to configure. http://hadoop.apache.org/docs/stable/capacity_scheduler.html)
				If your hadoop has Fair Scheduler then provide pool name with parameter --queue-name
				If your hadoop has Capacity Scheduler then provide  queue name with parameter --queue-name.
				Example: --hadoop-scheduler Fair
					 --hadoop-scheduler Capacity
					 --hadoop-scheduler FIFO

--queue-name    		If your hadoop has Capacity Scheduler then provide --queue-name.
				Example: --queue-name pg1
--job-priority    		Give the job priority to run your job.
				Possible options: [ VERY_LOW | LOW | NORMAL | HIGH | VERY_HIGH ]
				Example: --job-priority VERY_HIGH
				
--verbose                 	To print inputs on screen.  
--test                 	To run a test for all dependency and all.
--help                	To run a test for all dependency and all.


}}}

=4 BWA mapping =
Burrows-Wheeler Aligner (BWA) is an efficient program that aligns relatively short nucleotide sequences against a long reference sequence such as the human. 

*Step1:* Download latest BWA source code from http://sourceforge.net/projects/bio-bwa/files/


*Step2:* Uncompress the downloaded file bwa-0.6.2.tar.bz2 with following command:

{{{
tar -xvjf bwa-0.6.2.tar.bz2
}}}

This command will return the folder/directory *bwa-0.6.2*

Step3: Enter into the uncompressed folder *bwa-0.6.2* with following command:

{{{
cd /home/user/bwa-0.6.2
}}}

Step4: To make BWA executable run the *sudo make* command:

{{{
sudo make
}}}

After running the make command an executable called bwa will be created in */home/user/bwa-0.6.2* folder.

Give the full path for `DistMap` command parameter
 
{{{
perl DistMap_v_1.0/distmap --mapper-path /home/user/bwa-0.6.2/bwa
}}}



=5 GSNAP mapping =

GSNAP (Genomic Short-read Nucleotide Alignment Program) is a mapper for RNA-seq data. It has the advantages that it can detect splicing events and is capable of SNP tolerant alignments (Wu & Nacu 2010).

*Step1:* Download the GSNAP source code from 
http://research-pub.gene.com/gmap/src/gmap-gsnap-2012-07-20.tar.gz

*Step2:* Uncompress the downloaded file “gmap-gsnap-2012-07-20.tar.gz” with following command:
{{{
tar -xzvf gmap-gsnap-2012-07-20.tar.gz
}}}

*Step3:* Enter into the uncompressed folder *gmap-2012-07-20* with following command:

{{{
  cd /home/user/gmap-2012-07-20
}}}


*Step4:* To install the gmap package run these four commands:
{{{
./configure --prefix=/home/user/gmap-2012-07-20
make
make check   (optional)
make install
}}}

The above four commands will build GSNAP and other executables in */home/user/gmap-2012-07-20/bin*

*Step5:* To check the GSNAP installations run this command:
{{{
/home/user/gmap-2012-07-20/bin/gsnap –help
}}}

This command will return the detailed help manual for various GSNAP parameters if the installation was successful.

*Note:* For more detailed information how to install GSNAP please read the gmap-2012-07-20/README file.


In */home/user/gmap-2012-07-20* folder you should get following executables:


{{{
/home/user/gmap-2012-07-20/bin/gsnap
/home/user/gmap-2012-07-20/bin/gmap_build

}}}

Give the full path for `DistMap` command parameter
 
{{{
perl DistMap_v_1.0/distmap --mapper-path /home/user/gmap-2012-07-20/bin/gsnap
}}}




=6 `TopHat` mapping =
Download TopHat binary from http://tophat.cbcb.umd.edu/downloads/tophat-2.0.6.OSX_x86_64.tar.gz for Macintosh or from http://tophat.cbcb.umd.edu/downloads/tophat-2.0.6.Linux_x86_64.tar.gz for Linux operating system.

==Get `Bowtie for TopHat` mapping==
As `TopHat` uses bowtie for mapping internally therefore get Bowtie binaries from http://sourceforge.net/projects/bowtie-bio/files/bowtie/0.12.9/ and copy following bowtie executables from */home/user/bowtie-0.12.9* folder into */home/user/tophat-2.0.6* folder.
{{{
cp /home/user/bowtie-0.12.9/bowtie /home/user/tophat-2.0.6/
cp /home/user/bowtie-0.12.9/bowtie-build /home/user/tophat-2.0.6/
cp /home/user/bowtie-0.12.9/bowtie-build-debug /home/user/tophat-2.0.6/
cp /home/user/bowtie-0.12.9/bowtie-debug /home/user/tophat-2.0.6/
cp /home/user/bowtie-0.12.9/bowtie-inspect /home/user/tophat-2.0.6/
cp /home/user/bowtie-0.12.9/bowtie-inspect-debug /home/user/tophat-2.0.6/
}}}




In */home/user/tophat-2.0.6* folder you should get following executables:


{{{
/home/user/tophat-2.0.6/prep_reads
/home/user/tophat-2.0.6/tophat

/home/user/tophat-2.0.6/bowtie
/home/user/tophat-2.0.6/bowtie-build
/home/user/tophat-2.0.6/bowtie-build-debug
/home/user/tophat-2.0.6/bowtie-debug
/home/user/tophat-2.0.6/bowtie-inspect
/home/user/tophat-2.0.6/bowtie-inspect-debug
}}}


Give the full path for `DistMap` command parameter
 
{{{
perl DistMap_v_1.0/distmap --mapper-path /home/user/tophat-2.0.6/tophat
}}}

*Note:* Since TopHat has been developed on Python 2.6 therefore all slaves should have Python 2.6. The reason for that is there is a python package called *getopt* which is called in */home/user/tophat-2.0.6/tophat*


=7 Bowtie mapping =

Download Bowtie binaries from http://sourceforge.net/projects/bowtie-bio/files/bowtie/0.12.9/


In */home/user/bowtie-0.12.9* folder you should get following executables:

{{{
/home/user/bowtie-0.12.9/bowtie
/home/user/bowtie-0.12.9/bowtie-build
/home/user/bowtie-0.12.9/bowtie-build-debug
/home/user/bowtie-0.12.9/bowtie-debug
/home/user/bowtie-0.12.9/bowtie-inspect
/home/user/bowtie-0.12.9/bowtie-inspect-debug
}}}

Give the full path for `DistMap` command parameter
 
{{{
perl DistMap_v_1.0/distmap --mapper-path /home/user/bowtie-0.12.9/bowtie
}}}


=8 SOAP mapping =

==SOAPaligner/soap2 installation==
SOAPaligner/soap2 is short read mapper which allows gapped and un-gapped mapping of short reads. 

*Step1:* Download latest SOAPaligner/soap2 source code from http:// soap.genomics.org.cn/down/SOAPaligner-v2.20-src.tar.gz

*Step2:* Uncompress the downloaded file SOAPaligner-v2.20-src.tar.gz with following command:
{{{
tar -xzvf SOAPaligner-v2.20-src.tar.gz
}}}

This command will return the folder/directory *soap2.20*
*Step3:* Enter into the uncompressed folder soap2.20 with following command:
{{{
	cd /home/user/soap2.20
}}}

*Step4:* To make soap executable run the make command:
{{{
	make
}}}
After running the make command an executable called soap will be created in */home/user/soap2.20* folder. 

==SOAPaligner_builder installation==
To run SOAPaligner, need to build index files for the reference genome, and then search reads against the formatted index files.

*Step1:* Download latest SOAPaligner_builder source code from http://soap.genomics.org.cn/down/SOAPaligner-v2.20-src_builder.tar.gz


*Step2:* Uncompress the downloaded file SOAPaligner-v2.20-src_builder.tar.gz with following command:

{{{
tar –xzvf SOAPaligner-v2.20-src_builder.tar.gz
}}}

This command will return the folder/directory *soap_builder*

*Step3:* Enter into the uncompressed folder *soap_builder* with following command:
{{{
	cd /home/user/soap_builder
}}}

*Step4:* To make soap executable run the make command:
{{{
 make
}}}

After running the make command an executable called *2bwt-builder* will be created into folder */home/user/soap_builder*. 

*Step5:* Copy *2bwt-builder* file into /home/user/soap2.20 folder with following command:
{{{
cp /home/user/soap_builder/2bwt-builder /home/user/soap2.20/
}}}


==soap2sam.pl installation:==
This is a Perl script, which is required to convert soap output format into common SAM format.

*Step1:* Download latest soap2sam.pl source code from http:// soap.genomics.org.cn/down/soap2sam.tar.gz

*Step2:* Uncompress the downloaded file soap2sam.tar.gz with following command:
{{{
tar –xzvf soap2sam.tar.gz
}}}

This command will return the perl script soap2sam.pl

*Step3:* Copy *soap2sam.pl* file into /home/user/soap2.20 folder with following command:
{{{
cp soap2sam.pl /home/user/soap2.20/
}}}

In */home/user/soap2.20* folder you should get following executables: 

{{{
/home/user/soap2.20/soap2
/home/user/soap2.20/2bwt-builder
/home/user/soap2.20/soap2sam.pl
}}}


Give the full path for `DistMap` command parameter
 
{{{
perl DistMap_v_1.0/distmap --mapper-path /home/user/soap2.20/soap2
}}}


=9 STAR mapping =

Download binary of STAR from ftp://ftp2.cshl.edu/gingeraslab/tracks/STARrelease/2.2.0/


Give the full path for `DistMap` command parameter
 
{{{
perl DistMap_v_1.0/distmap --mapper-path /home/user/STAR_2.2.0c.Linux_x86_64/STAR
}}}

=10 Bismak mapping =
Bismark A bisulfite read mapper and methylation caller
 
www.bioinformatics.babraham.ac.uk/projects/bismark/bismark_v0.7.7.tar.gz



*Step1:* Download the Bismark source code from www.bioinformatics.babraham.ac.uk/projects/bismark/bismark_v0.7.7.tar.gz

*Step2:* Uncompress the downloaded file “bismark_v0.7.7.tar.gz” with following command:
{{{
tar -xzvf bismark_v0.7.7.tar.gz
}}}
*Step3:* Enter the uncompressed folder “bismark_v0.7.7” with following command:
{{{
cd bismark_v0.7.7
}}}

==Get Bowtie for Bismark mapping==
As Bismark uses bowtie for mapping internally therefore get Bowtie binaries from http://sourceforge.net/projects/bowtie-bio/files/bowtie/0.12.9/ and copy following bowtie executables from */home/user/bowtie-0.12.9* folder into */home/user/bismark_v0.7.7* folder.
{{{
cp /home/user/bowtie-0.12.9/bowtie /home/user/bismark_v0.7.7/
cp /home/user/bowtie-0.12.9/bowtie-build /home/user/bismark_v0.7.7/
cp /home/user/bowtie-0.12.9/bowtie-build-debug /home/user/bismark_v0.7.7/
cp /home/user/bowtie-0.12.9/bowtie-debug /home/user/bismark_v0.7.7/
cp /home/user/bowtie-0.12.9/bowtie-inspect /home/user/bismark_v0.7.7/
cp /home/user/bowtie-0.12.9/bowtie-inspect-debug /home/user/bismark_v0.7.7/
}}}




In */home/user/bismark_v0.7.7* folder you should get following executables:


{{{
/home/user/bismark_v0.7.7/bismark
/home/user/bismark_v0.7.7/bismark_genome_preparation
/home/user/bismark_v0.7.7/bismark_methylation_extractor
/home/user/bismark_v0.7.7/bowtie
/home/user/bismark_v0.7.7/bowtie-build
/home/user/bismark_v0.7.7/bowtie-build-debug
/home/user/bismark_v0.7.7/bowtie-debug
/home/user/bismark_v0.7.7/bowtie-inspect
/home/user/bismark_v0.7.7/bowtie-inspect-debug
}}}


Give the full path for `DistMap` command parameter
 
{{{
perl DistMap_v_1.0/distmap --mapper-path /home/user/bismark_v0.7.7/bismark
}}}


=11 BSMAP mapping =

BSMAP is a short reads mapping software for bisulfite sequencing reads. Bisulfite treatment converts unmethylated Cytosines into Uracils (sequenced as Thymine) and leave methylated Cytosines unchanged, hence provides a way to study DNA cytosine methylation at single nucleotide resolution. BSMAP aligns the Ts in the reads to both Cs and Ts in the reference.



*Step1:* Download the BSMAP source code from http://bsmap.googlecode.com/files/bsmap-2.73.tgz

*Step2:* Uncompress the downloaded file “bsmap-2.73.tgz” with following command:
{{{
tar -xzvf bsmap-2.73.tgz
}}}
*Step3:* Enter the uncompressed folder “bsmap-2.73” with following command:
{{{
cd bsmap-2.73
}}}
*Step4:* To install the BSMAP package run these two commands:

{{{
sudo make
sudo make install
}}}

The above four commands will build bsmap executable in “/usr/bin”

*Step5:* To check the BSMAP installations run this command:
{{{

bsmap –h
}}}

This command will return the detailed help manual for various BSMAP parameters if the installation was successful.

*Note:* For more detailed information how to run BSMAP please read the bsmap-2.73/README.txt file.


Give the full path for `DistMap` command parameter
 
{{{
perl DistMap_v_1.0/distmap --mapper-path /home/user/bsmap-2.73/bsmap
}}}


 